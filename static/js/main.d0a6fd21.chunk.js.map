{"version":3,"sources":["components/Form/Form.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactList/ContactListItem-fade.module.css","components/Notification/Notification.module.css","components/Container/Container.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/Form/Form.js","components/Filter/Filter.js","components/AppName/AppName.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","ContactItem","name","number","deleteContact","button","type","onClick","ContactList","contacts","onDeleteContact","length","TransitionGroup","component","List","map","id","CSSTransition","key","timeout","classNames","fadeStyles","ListItem","Form","state","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","alert","form","autoComplete","this","label","labelName","required","input","placeholder","onChange","Component","Filter","AppName","in","appear","unmountOnExit","Notification","message","App","filter","notification","notificationIsVisible","contactId","prevState","contact","addContact","newContact","uuidv4","some","toLowerCase","filterContacts","getFilteredContacts","normalizedFilter","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","filteredContacts","onEntered","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0a6fd21.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"label\":\"Form_label__15SAE\",\"input\":\"Form_input__2ESfd\",\"labelName\":\"Form_labelName__2L7Gh\",\"button\":\"Form_button__243jh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ContactList_List__20gyh\",\"ListItem\":\"ContactList_ListItem__vxGfb\",\"button\":\"ContactList_button__1RuFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"labelName\":\"Filter_labelName__3VI7p\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3tQ9A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactListItem-fade_enter__3L9LC\",\"enterActive\":\"ContactListItem-fade_enterActive__3juOu\",\"exit\":\"ContactListItem-fade_exit__2OvWU\",\"exitActive\":\"ContactListItem-fade_exitActive__1R0L4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__2vzo1\"};","import React from 'react';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nconst ContactItem = ({ name, number, deleteContact }) => {\n  return (\n    <>\n      <p>\n        {name} : {number}\n      </p>\n      <button className={styles.button} type=\"button\" onClick={deleteContact}>\n        Удалить\n      </button>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactItem from './ContactItem';\nimport styles from './ContactList.module.css';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport fadeStyles from './ContactListItem-fade.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    contacts.length > 0 && (\n      <TransitionGroup component=\"ul\" className={styles.List}>\n        {contacts.map(({ id, name, number }) => (\n          <CSSTransition key={id} timeout={250} classNames={fadeStyles}>\n            <li className={styles.ListItem} key={id}>\n              <ContactItem\n                name={name}\n                number={number}\n                deleteContact={() => onDeleteContact(id)}\n              />\n            </li>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    )\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\nexport default ContactList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Form.module.css';\n\nclass Form extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n  handleSubmit = e => {\n    const { name, number } = this.state;\n    e.preventDefault();\n    if (name === '') {\n      alert('Please, give a name for new contact');\n      return;\n    }\n    if (number === '') {\n      alert('Please, add a number');\n      return;\n    }\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form\n        className={styles.form}\n        autoComplete=\"off\"\n        onSubmit={this.handleSubmit}\n      >\n        <label className={styles.label}>\n          <p className={styles.labelName}>Name:&#42;</p>\n          <input\n            required\n            className={styles.input}\n            type=\"text\"\n            placeholder=\"ex. Anne Hathaway\"\n            value={this.state.name}\n            name=\"name\"\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <label className={styles.label}>\n          <p className={styles.labelName}>Number:&#42;</p>\n          <input\n            required\n            className={styles.input}\n            type=\"number\"\n            placeholder=\"ex. 0532455678\"\n            value={this.state.number}\n            name=\"number\"\n            onChange={this.handleInputChange}\n          />\n        </label>\n\n        <button className={styles.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.label}>\n      <p className={styles.labelName}>Find contact by name</p>\n      <input\n        className={styles.input}\n        type=\"text\"\n        placeholder=\"Name\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport './AppName.css';\n\nconst AppName = () => {\n  return (\n    <CSSTransition\n      in={true}\n      appear={true}\n      timeout={250}\n      classNames=\"AppName-slideIn\"\n      unmountOnExit\n    >\n      <h2>Phonebook</h2>\n    </CSSTransition>\n  );\n};\n\nexport default AppName;\n","import React from 'react';\nimport styles from './Notification.module.css';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return (\n    <div className={styles.Notification}>\n      <p>{message}</p>\n    </div>\n  );\n};\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Container from './components/Container';\nimport ContactList from './components/ContactList';\nimport Form from './components/Form';\nimport Filter from './components/Filter';\nimport AppName from './components/AppName';\nimport Notification from './components/Notification';\nimport { CSSTransition } from 'react-transition-group';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      // { id: '1', name: 'Brad Pitt', number: '0591234567' },\n      // { id: '2', name: 'Anne Hathaway', number: '0593452378' },\n      // { id: '3', name: 'Natalie Portman', number: '0595673427' },\n      // { id: '4', name: 'Salma Hayek', number: '0594567345' },\n      // { id: '5', name: 'George Clooney', number: '0594675189' },\n    ],\n    filter: '',\n    notification: '',\n    notificationIsVisible: false,\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    if (\n      contacts.some(contact => {\n        return name.toLowerCase() === contact.name.toLowerCase();\n      })\n    ) {\n      this.setState({\n        notification: `Contact \"${name}\" is already exist`,\n        notificationIsVisible: true,\n      });\n      return;\n    }\n\n    if (\n      contacts.some(contact => {\n        return number === contact.number;\n      })\n    ) {\n      this.setState({\n        notification: `Number \"${number}\" is already exist`,\n        notificationIsVisible: true,\n      });\n      return;\n    }\n\n    this.setState(prevState => ({\n      contacts: [newContact, ...prevState.contacts],\n    }));\n  };\n\n  filterContacts = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter, notification, notificationIsVisible } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n      <Container>\n        <AppName />\n        <Form onSubmit={this.addContact} />\n        <Filter value={filter} onChange={this.filterContacts} />\n\n        <h2>Contacts</h2>\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n        <CSSTransition\n          in={notificationIsVisible}\n          // appear={true}\n          timeout={3000}\n          classNames=\"Notification-slideIn\"\n          unmountOnExit\n          onEntered={() => this.setState({ notificationIsVisible: false })}\n        >\n          <Notification message={notification} />\n        </CSSTransition>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}